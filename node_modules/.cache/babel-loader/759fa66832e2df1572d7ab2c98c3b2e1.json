{"remainingRequest":"/Users/nile/Blob/client/node_modules/babel-loader/lib/index.js!/Users/nile/Blob/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/nile/Blob/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nile/Blob/client/src/views/UserInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nile/Blob/client/src/views/UserInfo.vue","mtime":1694740598919},{"path":"/Users/nile/Blob/client/node_modules/cache-loader/dist/cjs.js","mtime":1670838335003},{"path":"/Users/nile/Blob/client/node_modules/babel-loader/lib/index.js","mtime":1670838334849},{"path":"/Users/nile/Blob/client/node_modules/cache-loader/dist/cjs.js","mtime":1670838335003},{"path":"/Users/nile/Blob/client/node_modules/vue-loader/lib/index.js","mtime":1670838336149}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["UserInfo.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div id=\"UserInfo\">\r\n    <article v-if=\"userInfo._id\">\r\n      <h2>用户信息</h2>\r\n      <p>昵称：{{ userInfo.user }}</p>\r\n      <p>\r\n        头像：\r\n        <span\r\n          class=\"img\"\r\n          :style=\"{\r\n            backgroundImage: `url(${urlBase}${userInfo.face})`\r\n          }\"\r\n        ></span>\r\n      </p>\r\n      <div class=\"update\">\r\n        <el-tabs v-model=\"activeName\">\r\n          <el-tab-pane\r\n            label=\"修改昵称\"\r\n            name=\"first\"\r\n          >\r\n            <el-form\r\n              :model=\"nameForm\"\r\n              status-icon\r\n              :rules=\"rules\"\r\n              ref=\"nameForm\"\r\n              label-width=\"100px\"\r\n            >\r\n              <el-form-item label=\"原昵称\">\r\n                {{ userInfo.user }}\r\n              </el-form-item>\r\n              <el-form-item\r\n                label=\"新昵称\"\r\n                prop=\"user\"\r\n              >\r\n                <el-input\r\n                  type=\"text\"\r\n                  v-model=\"nameForm.user\"\r\n                  autocomplete=\"off\"\r\n                ></el-input>\r\n                <el-button\r\n                  type=\"primary\"\r\n                  @click=\"handleNameUpdate('nameForm')\"\r\n                >确认修改</el-button>\r\n              </el-form-item>\r\n            </el-form>\r\n          </el-tab-pane>\r\n          <el-tab-pane\r\n            label=\"修改密码\"\r\n            name=\"second\"\r\n          >\r\n            <el-form\r\n              :model=\"passForm\"\r\n              status-icon\r\n              :rules=\"rules\"\r\n              ref=\"passForm\"\r\n              label-width=\"100px\"\r\n            >\r\n              <el-form-item\r\n                label=\"原密码\"\r\n                prop=\"oldPass\"\r\n              >\r\n                <el-input\r\n                  type=\"password\"\r\n                  v-model=\"passForm.oldPass\"\r\n                  autocomplete=\"off\"\r\n                ></el-input>\r\n              </el-form-item>\r\n              <el-form-item\r\n                label=\"新密码\"\r\n                prop=\"newPass\"\r\n              >\r\n                <el-input\r\n                  type=\"password\"\r\n                  v-model=\"passForm.newPass\"\r\n                  autocomplete=\"off\"\r\n                ></el-input>\r\n              </el-form-item>\r\n              <el-form-item\r\n                label=\"确认新密码\"\r\n                prop=\"newPass2\"\r\n              >\r\n                <el-input\r\n                  type=\"password\"\r\n                  v-model=\"passForm.newPass2\"\r\n                  autocomplete=\"off\"\r\n                ></el-input>\r\n              </el-form-item>\r\n              <el-form-item>\r\n                <el-button\r\n                  type=\"primary\"\r\n                  @click=\"handlePassUpdate('passForm')\"\r\n                >确认修改</el-button>\r\n              </el-form-item>\r\n            </el-form>\r\n          </el-tab-pane>\r\n          <el-tab-pane\r\n            label=\"修改头像\"\r\n            class=\"third\"\r\n            name=\"third\"\r\n          >\r\n            <el-upload\r\n              class=\"avatar-uploader\"\r\n              name=\"avatar\"\r\n              :action=\"urlBase+'/upload/face'\"\r\n              :show-file-list=\"false\"\r\n              :with-credentials=\"true\"\r\n              :on-success=\"handleAvatarSuccess\"\r\n              :before-upload=\"beforeAvatarUpload\"\r\n            >\r\n              <img\r\n                v-if=\"imageUrl\"\r\n                :src=\"imageUrl\"\r\n                class=\"avatar\"\r\n              >\r\n              <i\r\n                v-else\r\n                class=\"el-icon-plus avatar-uploader-icon\"\r\n              ></i>\r\n            </el-upload>\r\n          </el-tab-pane>\r\n        </el-tabs>\r\n      </div>\r\n    </article>\r\n    <article v-else>\r\n      <h2>用户信息</h2>\r\n      <p>暂未登陆，无信息。\r\n        <router-link to=\"/\">返回首页</router-link>\r\n      </p>\r\n    </article>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState } from \"vuex\"\r\n\r\nexport default {\r\n  name: \"UserInfo\",\r\n  data() {\r\n    return {\r\n      urlBase: process.env.NODE_ENV === \"development\" ? \"http://localhost:3000\" : \"\"\r\n      , activeName: \"first\"\r\n      , nameForm: { user: \"\" }\r\n      , passForm: {\r\n        oldPass: \"\",\r\n        newPass: \"\",\r\n        newPass2: \"\"\r\n      }\r\n      , rules: {\r\n        /*用户名规则*/\r\n        user: [{\r\n          validator(rule, value, callback) {\r\n            if (/^[\\w\\u4e00-\\u9fa5]{2,8}$/.test(value)) {\r\n              callback()\r\n            } else {\r\n              callback(new Error(\"用户名不满足规则\"))\r\n            }\r\n          },\r\n          required: true,\r\n          trigger: \"blur\"\r\n        }],\r\n\r\n        /*密码规则*/\r\n        oldPass: [{\r\n          validator(rule, value, callback) {\r\n            if (/^[\\w\\[\\]\\/\\\\\\-!@#$%^&*()+=|,.<>?:;\"'{}]{6,18}$/.test(value)) {\r\n              callback()\r\n            } else {\r\n              callback(new Error(\"密码不满足规则\"))\r\n            }\r\n          },\r\n          required: true,\r\n          trigger: \"blur\"\r\n        }],\r\n        newPass: [{\r\n          validator(rule, value, callback) {\r\n            if (/^[\\w\\[\\]\\/\\\\\\-!@#$%^&*()+=|,.<>?:;\"'{}]{6,18}$/.test(value)) {\r\n              callback()\r\n            } else {\r\n              callback(new Error(\"密码不满足规则\"))\r\n            }\r\n          },\r\n          required: true,\r\n          trigger: \"blur\"\r\n        }],\r\n        /*再次输入密码规则*/\r\n        newPass2: [{\r\n          validator: (rule, value, callback) => {\r\n            if (value === this.passForm.newPass) {\r\n              callback()\r\n            } else {\r\n              callback(\"两次输入密码不一致\")\r\n            }\r\n          },\r\n          required: true,\r\n          trigger: \"blur\"\r\n        }]\r\n\r\n      }\r\n      , imageUrl: \"\"\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState(['userInfo'])\r\n  },\r\n  methods: {\r\n    //修改昵称\r\n    handleNameUpdate(formName) {\r\n      this.$refs[formName].validate(async valid => {\r\n        if (!valid) return false\r\n        let { data } = await this.$axios({\r\n          method: \"post\",\r\n          url: \"/update/name\",\r\n          data: { newName: this.nameForm.user }\r\n        })\r\n\r\n        if (data.code !== 0) {\r\n          return this.$message.error(data.msg)\r\n        }\r\n\r\n        this.$message({\r\n          type: \"success\",\r\n          duration: 1000,\r\n          message: \"更新成功\",\r\n          onClose() {\r\n            window.location.reload()\r\n          }\r\n        })\r\n\r\n      })\r\n    },\r\n\r\n    //修改密码\r\n    handlePassUpdate(formName) {\r\n      this.$refs[formName].validate(async valid => {\r\n        if (!valid) return false\r\n        let { data } = await this.$axios({\r\n          method: \"post\",\r\n          url: \"/update/pass\",\r\n          data: {\r\n            _id: this.userInfo._id,\r\n            oldPass: this.passForm.oldPass,\r\n            newPass: this.passForm.newPass\r\n          }\r\n        })\r\n        if (data.code !== 0) {\r\n          return this.$message.error(data.msg)\r\n        }\r\n\r\n\r\n        this.$message({\r\n          type: \"success\",\r\n          message: \"密码修改成功\",\r\n          duration: 1000,\r\n          onClose() {\r\n            this.$confirm('您的信息已修改, 请重新登录', '提示', {\r\n              confirmButtonText: '确定',\r\n              cancelButtonText: '取消',\r\n              type: 'warning',\r\n              center: true\r\n            }).then(async () => {\r\n              await this.$axios({\r\n                method: \"post\",\r\n                url: \"/login/logout\"\r\n              })\r\n              window.location.href = \"/\"\r\n            }).catch(() => {\r\n              console.log(\"点击取消\")\r\n            });\r\n          }\r\n        })\r\n\r\n      })\r\n    },\r\n\r\n    //上传成功之后\r\n    handleAvatarSuccess(res, file) {\r\n      if (res.code !== 0) {\r\n        return this.$message.error(res.msg)\r\n      }\r\n      this.imageUrl = URL.createObjectURL(file.raw);\r\n      this.$message({\r\n        type: \"success\",\r\n        message: \"上传成功\",\r\n        duration: 1000,\r\n        onClose() {\r\n          window.location.reload()\r\n        }\r\n      })\r\n    },\r\n    //上传之后的检测\r\n    beforeAvatarUpload(file) {\r\n      //是否是图片格式\r\n      let isImage = /^image\\/(gif|jpeg|png)$/.test(file.type)\r\n      //是否小于2M\r\n      let isLt2M = file.size / 1024 / 1024 < 2;\r\n      if (!isImage) {\r\n        this.$message.error('上传头像必须是jpg/png/gif图片');\r\n      }\r\n      if (!isLt2M) {\r\n        this.$message.error('上传头像图片大小不能超过 2MB!');\r\n      }\r\n      return isImage && isLt2M\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n#UserInfo {\r\n  article {\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    margin-bottom: 15px;\r\n    box-shadow: 0 0 4px #ddd;\r\n    padding: 25px 20px;\r\n    background-color: #fff;\r\n    font-family: \"Quicksand\", \"Microsoft YaHei\", sans-serif;\r\n\r\n    h2 {\r\n      margin-bottom: 15px;\r\n      font-size: 20px;\r\n      letter-spacing: 3px;\r\n      line-height: 24px;\r\n      border-left: 5px solid #73b899;\r\n      text-indent: 10px;\r\n    }\r\n\r\n    p {\r\n      text-indent: 2em;\r\n      color: #444;\r\n      font-size: 14px;\r\n      letter-spacing: 4px;\r\n      line-height: 30px;\r\n\r\n      a {\r\n        color: #409eff;\r\n\r\n        &:hover {\r\n          text-decoration: underline;\r\n        }\r\n      }\r\n\r\n      span.img {\r\n        display: inline-block;\r\n        width: 40px;\r\n        height: 40px;\r\n        background-size: cover;\r\n        background-position: center center;\r\n      }\r\n    }\r\n  }\r\n\r\n  .third {\r\n    /deep/ .avatar-uploader .el-upload {\r\n      border: 1px dashed #d9d9d9;\r\n      border-radius: 6px;\r\n      cursor: pointer;\r\n      position: relative;\r\n      overflow: hidden;\r\n    }\r\n    /deep/ .avatar-uploader .el-upload:hover {\r\n      border-color: #409eff;\r\n    }\r\n    /deep/ .avatar-uploader-icon {\r\n      font-size: 28px;\r\n      color: #8c939d;\r\n      width: 178px;\r\n      height: 178px;\r\n      line-height: 178px;\r\n      text-align: center;\r\n    }\r\n    /deep/ .avatar {\r\n      width: 178px;\r\n      height: 178px;\r\n      display: block;\r\n    }\r\n  }\r\n}\r\n/deep/ .el-form-item__content {\r\n  display: flex;\r\n}\r\n/deep/.el-button--primary {\r\n  margin-left: 20px;\r\n}\r\n</style>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":"src/views"}]}